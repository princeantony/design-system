import { Store, State } from '@ngrx/store';
import { Component, OnInit } from '@angular/core';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import _ from 'lodash';
import { ActivatedRoute, Router } from '../../../../../../node_modules/@angular/router';
import { ModalService } from '../../../../shared/services/modal.service';
import { BankInfoService } from '../../services/bank-info.service';
import { PayAdminGlobalState } from '../../../../shared/store/pay-admin-global.store';
import { NgxSpinnerService } from 'ngx-spinner';
import { APP_CONST, ENV} from '../../../../shared/constants/app.constants';
import {GRID_CONFIG} from '../../../../shared/constants/grid.constants';
import { GridLinkComponent } from '../grid-link/grid-link.component';

@Component({
  selector: 'app-bank-list',
  templateUrl: './bank-list.component.html'
})
export class BankListComponent implements OnInit {
columnDefs: any;
subDiv: any;
bankInfoData: any;
frameworkComponents: any;
context: any;
bankSubDiv: any;
bankInfo: any;
divsubId: string;
rowStyle;
planNumber: string;
style = {
        width: '85%'
    };
  constructor(
    private modalService: ModalService,
    private router: Router,
    private bankInfoService: BankInfoService,
    private spinner: NgxSpinnerService) {
      this.columnDefs = GRID_CONFIG.BANK_INFO.COLUMN_DEFS;
      this.rowStyle = { color: '#333333' }; // to be moved to css
      PayAdminGlobalState.bankDetails = null;
    }
  ngOnInit() {
    this.planNumber = PayAdminGlobalState.planNumber;
    this.frameworkComponents = {
      linkRenderer: GridLinkComponent
    };
    this.context = { componentParent: this };
    this.spinner.show();
    this.getDivSub();
  }
  routeTo(link) {
    const tempLink = _.split(link, '/');
    PayAdminGlobalState.divsubId = tempLink[1];

    if (tempLink[0] === 'create') {
      this.divsubId = tempLink[1];
      this.modalService.open('bankModal');
    } else {
     this.router.navigate(['/bankInfo/' + link]);
    }
 }
  getBankInfo(): void {
    this.bankInfoService.getBankInfo(this.planNumber).subscribe(
      bankInfo => {
        this.spinner.hide();
        if (bankInfo.status === APP_CONST.SUCCESS) {
          PayAdminGlobalState.bankinfo = bankInfo.data;
          this.bankInfoData = bankInfo.data;
          if (this.bankInfoData.length === 1) {
            if (!this.bankInfoData[0].bankName) {
              this.router.navigate(['/bankInfo/create']);
            } else {this.router.navigate(['/bankInfo/edit']);
          }
          } else {
            this.bindBankInfo();
          }
        }
      },
      err => {
        console.log("Error", err), this.spinner.hide();
      }
    );
  }

  getDivSub(): void {
    this.bankInfoService.getSubDiv(PayAdminGlobalState.planNumber).subscribe(
      subDiv => {
        if (subDiv.status === APP_CONST.SUCCESS) {
          PayAdminGlobalState.subDiv = subDiv.data;
          this.subDiv = subDiv.data;
          this.getBankInfo();
        }
      },
      err => {
        console.log("Error", err), this.spinner.hide();
      }
    );
  }
  bindBankInfo() {
    this.bankInfoData.forEach(element => {
      _.merge(element, _.find(this.subDiv, ["id", element.divsub]));
    });
  }
}
